// <auto-generated />
using System;
using FischQuizAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FischQuizAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FischQuizAPI.Models.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacteristicId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FishId")
                        .HasColumnType("int");

                    b.HasKey("CharacteristicId");

                    b.HasIndex("FishId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("FischQuizAPI.Models.Fish", b =>
                {
                    b.Property<int>("FishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishId"));

                    b.Property<string>("FishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FishId");

                    b.ToTable("Fishes");
                });

            modelBuilder.Entity("FischQuizAPI.Models.Characteristic", b =>
                {
                    b.HasOne("FischQuizAPI.Models.Fish", "Fish")
                        .WithMany("Characteristics")
                        .HasForeignKey("FishId");

                    b.Navigation("Fish");
                });

            modelBuilder.Entity("FischQuizAPI.Models.Fish", b =>
                {
                    b.Navigation("Characteristics");
                });
#pragma warning restore 612, 618
        }
    }
}
